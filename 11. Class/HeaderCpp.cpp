#include <iostream>

using namespace std;

/*************************************************************
 * 분리 구현
 *
 * 클래스의 멤버 함수를 선언부와 구현부로 나누어 작성하는 방법
 *************************************************************/

 // <헤더 파일 - 선언부>
 // 클래스의 선언부를 포함하는 내용으로 .h 파일로 저장하는 것이 일반적
 // 저장한 헤더 파일은 소스 파일에서 해당 기능을 필요로 할때 #include 로 포함시켜 사용

class CClass
{
    int value;

public:
    int GetValue() { return value; }    // 구현부가 간단한 경우 선언부에 포함하는 것이 일반적

    void Function();                    // 함수의 선언 진행
};


// <소스 파일 - 구현부>
// 클래스의 구현부를 포함하는 내용으로 .cpp 파일로 저장하는 것이 일반적
// 클래스의 사용자는 대부분 구현내용까지 모두 파악할 필요는 없기 때문에 따로 분리하여 보관함
// 함수구현 : 반환형 클래스이름::멤버함수이름(매개변수목록) { 함수내용 }

void CClass::Function()
{
    // 함수의 구현 진행
}


// <분리 구현을 진행하는 이유>
// 0. 구현 이전에 기능을 사용하는 경우 컴파일러에서 내용을 찾을 수 없으며 이런 경우 전방선언이 필요
// 1. 헤더파일에 선언부에 해당하는 내용을 한번만 include 시키기 위해
// 2. 구현부에 내용을 감추고 선언부를 통해 사용방법만을 제공하기 위해
// 3. 클래스 내부에 구현부를 포함하는 경우 코드량이 많아 전체적인 클래스 구성을 확인이 어려움